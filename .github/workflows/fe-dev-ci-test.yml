# .github/workflows/fe-dev-ci-test.yml
name: Frontend Dev CI (Test)

on:
  workflow_dispatch:
    inputs:
      test_pr:
        description: 'Test PR number (for reference)'
        required: false
        type: string
  # 테스트용 - 특정 파일 변경 시에만 실행
  pull_request:
    branches: [ dev ]
    paths:
      - '.github/workflows/fe-dev-ci-test1.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TEST_MODE: true

jobs:
  test-announcement:
    name: Test Mode Announcement
    runs-on: ubuntu-latest
    steps:
      - name: Test mode notice
        run: |
          echo "🧪 **NEW PIPELINE TEST MODE**"
          echo "This is testing the new CI pipeline structure"
          echo "PR: ${{ github.event.inputs.test_pr || github.event.pull_request.number }}"
          echo "If this works well, we'll fully activate the new pipeline"

  # 코드 품질 검사
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.11.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  # 빌드 테스트
  build:
    name: Build Test
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Infisical CLI
        run: |
          curl -1sLf 'https://artifacts-cli.infisical.com/setup.deb.sh' | sudo -E bash
          sudo apt-get update && sudo apt-get install -y infisical

      - name: Fetch .env from Infisical
        run: |
          infisical export \
            --env=${{ secrets.INFISICAL_ENV_DEV }} \
            --projectId=${{ secrets.INFISICAL_PROJECT_ID }} \
            --token=${{ secrets.INFISICAL_DEV_TOKEN }} \
            --format=dotenv \
            --domain=${{ secrets.INFISICAL_API_URL }} \
            > $GITHUB_WORKSPACE/.env

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.11.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Test Success Notice
        run: |
          echo "✅ **NEW PIPELINE TEST SUCCESSFUL!**"
          echo "The new CI pipeline is ready for production use"
          echo "Next steps: Activate full pipeline and disable legacy"

  # 종합 결과 리포트
  test-result:
    name: Test Result Summary
    runs-on: ubuntu-latest
    if: always()
    needs: [test-announcement, lint, build]
    steps:
      - name: Create Test Summary
        run: |
          echo "## 🧪 New Pipeline Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Lint Check | ${{ needs.lint.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🏗️ Build Test | ${{ needs.build.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.lint.result }}" == "success" && "${{ needs.build.result }}" == "success" ]]; then
            echo "🎉 **All tests passed!** New pipeline is ready for activation." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some tests failed.** Please fix issues before activating new pipeline." >> $GITHUB_STEP_SUMMARY
          fi
